.has-background-light {
  background-color: white;
}

.container {
  display: flex;
  flex-direction: column;
  position: relative;
  width: auto;
  margin: 0 auto;
  line-height: 1.9rem;
}

.columns {
  display: flex;
  margin-left: -.75rem;
  margin-right: -.75rem;
  margin-top: -.75rem;
}

.columns.is-space-between {
  justify-content: space-between;
}

.column {
  display: block;
  padding: 1rem;
}

.column.is-9 a {
  font-weight: 500;
  color: var(--color-text-brand);
  /*box-shadow: inset 0 var(--shadow-default) #fff, inset 0 var(--shadow-color) var(--accent-color);*/
}

.column.is-9 a:hover {
  color: #dadada;
  text-decoration: underline;
  text-decoration-color: #dadadab3;
  text-underline-offset: .1em;
  /*box-shadow: inset 0 var(--shadow-default) #fff, inset 0 var(--shadow-color) #f00;*/
}

#to-top-btn {
  display: flex;
  position: fixed;
  bottom: 4rem;
  right: 2.5rem;
  width: 38px;
  height: 38px;
  background-color: var(--foreground-color);
  color: var(--background-color);
  border: none;
  border-radius: 50%;
  align-items: center;
  justify-content: center;
  padding: 0;
  z-index: 700;
  cursor: pointer;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);

  opacity: 0;
  visibility: hidden;
  pointer-events: none;
  transition: opacity 0.3s ease-in-out, visibility 0.3s ease, transform 0.2s ease-in-out;
}

#to-top-btn svg {
  width: 1.5rem;
  height: 1.5rem;
}

#to-top-btn:hover {
  transform: scale(1.1);
}

.\[\&\>li\]\:before\:content-\[\'-\'\]>li:before {
  --tw-content: "-";
  content: var(--tw-content);
}

/* Desktop (Max) ~ */
@media screen and (min-width: 1216px) {
  .container:not(.is-max-desktop) {
      max-width: 1152px;
  }
}

/* Desktop ~ */
@media screen and (min-width: 1024px) {
  .container {
      max-width: 960px;
  }
}

/* 0 ~ Tablet */
@media screen and (max-width: 1024px) {
  .main .container {
      padding: 0 2rem;
  }
}

/* Tablet ~ */
@media print, screen and (min-width: 1025px) {
  .column.is-9 {
      flex: none;
      width: 75%;
      padding: 1rem 2rem 1rem 1rem; /* top right bottom left */
  }

  .column.is-3 {
      flex: none;
      width: 25%;
  }
}

/* ~ Mobile */
@media print, screen and (max-width: 1024px) {
  .column.is-9 {
    flex: none;
    width: 90%;
    padding: 1rem;
  }

  .column.is-3 {
    flex: none;
    width: 10%;
    padding: 0.4rem;
  }

  #to-top-btn {
    right: 2rem;
  }
}

@media print, screen and (max-width: 840px) {
  #to-top-btn {
    right: 1.8rem;
  }
}

@media print, screen and (max-width: 480px) {
  .main .container {
    padding: 0 1.5rem;
  }
}

section[id] {
  scroll-margin-top: 60px; /* 스크롤 이동 시 헤더와 겹치지 않게 */
}

.prose-vercel :where(h1) {
  font-size: 2.8em;
  font-weight: 500;
  margin-top: 0.5em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}

.prose-vercel :where(h2) {
  font-size: 2.1em;
  font-weight: 500;
  margin-top: 1.6em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}

.prose-vercel :where(h2):not(:where([class~=not-prose],[class~=not-prose] *)) {
  border-top-style: solid;
  border-top-width: 1px;
  border-color: white;
  padding-top: 2.5rem;
}

.prose-vercel :where(h3):not(:where([class~=not-prose],[class~=not-prose] *)) {
  font-size: 1.55em;
  font-weight: 600;
  margin-top: 0.6em;
  margin-bottom: .6em;
  padding-top: 1.2em;
  line-height: 1.6;
  color: #474747;
  scroll-margin-top: 51px;
}

.prose li p {
  margin: 0.4em 0;
}

.prose :where(p):not(:where([class~=not-prose],[class~=not-prose] *)) {
  margin-top: 0.8em;
  margin-bottom: 0.8em;
}

.prose :where(ul):not(:where([class~=not-prose],[class~=not-prose] *)) {
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-inline-start: 1.625em;
}

.prose :where(.prose>ul>li p):not(:where([class~=not-prose],[class~=not-prose] *)) {
  margin-top: .75em;
  margin-bottom: .75em;
}

.prose li > p:has(> strong:not(:where([class~=not-prose],[class~=not-prose] *))) {
  margin-top: 1.25em;
}

li p strong {
  margin-right: 0.5em;
  font-weight: 600;
}

.fade-in-and-move-up-on-load {
  opacity: 0;
  transform: translateY(20px); /* 아래에서 올라오는 효과 추가 */
  transition: opacity 0.8s ease, transform 0.8s ease;
}

.fade-in-and-move-up-on-load.show {
  opacity: 1;
  transform: translateY(0);
}